<!DOCTYPE html>
<html>
  <head>
    <title>New Sails App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    



    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body style="background-image: url(/graffiti.jpg); background-repeat:no-repeat; background-attachment:fixed; color:white; background-size: 100% 110%; font-family:Verdana;">
     


    <div class="sloppy container">
    
  

    <nav class="navbar navbar-default" role="navigation">
      <div class="container-fluid">
        
        <div class="navbar-header">
          <a class="navbar-brand" href="/">
            <img alt="Brand" src="icon.png" height="25px" width="25px ">
          </a>
          <a class="navbar-brand" style="font-family: Verdana;" href="/">Writings On The Wall</a>
        </div>

        <form class="navbar-form navbar-right" role="search">
          <div class="form-group">
            <span style="color:black; font-size:12px">Search What? </span>
            <input type="text" class="form-control" placeholder="Search">
            <span style="color:black; font-size:12px"> How far? </span>
            <input type="text" class="form-control" placeholder="2 miles, etc.">
          </div>
          <button type="submit" class="btn btn-default">Submit</button>
          <span style="color:black;"> | </span>
          <a href="/">Sign In</a>
          <a href="/sloppypost">Post</a>
<!--           <a href="/">Sign In</a>
          <a  href="/sloppypost">Post Something</a> -->
        </form>
       

       
      </div>
    </nav>





    <!-- </div> -->
     
          
         
            <%- body %>
     </div>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
    <script src="//code.jquery.com/jquery-1.11.2.min.js"></script>

    
    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
